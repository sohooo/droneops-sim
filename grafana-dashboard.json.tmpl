{
  "uid": "droneops-telemetry",
  "title": "DroneOps Telemetry Dashboard",
  "version": 3,
  "schemaVersion": 36,
  "style": "dark",
  "editable": true,
  "panels": [
    {
      "id": 1,
      "type": "geomap",
      "title": "Drone Positions",
      "description": "Shows the current positions of all active drones. Marker color represents status (OK, Low Battery, Failure), marker size represents battery level.",
      "gridPos": { "x": 0, "y": 0, "w": 16, "h": 12 },
      "targets": [
        {
          "refId": "A",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT lat, lon, status, battery, cluster_id, drone_id FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": { "drawStyle": "points" },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "orange", "value": 20 },
              { "color": "red", "value": 5 }
            ]
          }
        },
        "overrides": []
      },
      "options": {
        "view": { "lat": 48.2, "lon": 16.4, "zoom": 5 },
        "layers": [
          {
            "type": "markers",
            "config": {
              "latField": "lat",
              "lonField": "lon",
              "sizeField": "battery",
              "colorField": "status",
              "sizeMin": 4,
              "sizeMax": 12,
              "colorScheme": "RdYlGn"
            }
          }
        ]
      }
    },
    {
      "id": 2,
      "type": "stat",
      "title": "Total Active Drones",
      "description": "Shows the total number of drones reporting telemetry in the selected time range.",
      "gridPos": { "x": 16, "y": 0, "w": 8, "h": 4 },
      "targets": [
        {
          "refId": "B",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT COUNT(DISTINCT drone_id) AS total_drones FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ]
    },
    {
      "id": 3,
      "type": "gauge",
      "title": "Average Battery Level",
      "description": "Shows the average battery level across all active drones.",
      "gridPos": { "x": 16, "y": 4, "w": 8, "h": 4 },
      "targets": [
        {
          "refId": "C",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT AVG(battery) AS avg_battery FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ]
    },
    {
      "id": 4,
      "type": "table",
      "title": "Recent Telemetry",
      "description": "Shows the 50 most recent telemetry records for troubleshooting and detailed analysis.",
      "gridPos": { "x": 0, "y": 12, "w": 24, "h": 8 },
      "targets": [
        {
          "refId": "D",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT ts, cluster_id, drone_id, lat, lon, alt, battery, status FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) ORDER BY ts DESC LIMIT 50",
          "format": "table"
        }
      ]
    },
    {
      "id": 5,
      "type": "table",
      "title": "Active Missions",
      "description": "Displays the currently running missions based on the configuration.",
      "gridPos": { "x": 0, "y": 20, "w": 24, "h": 8 },
      "targets": [
        {
          "refId": "E",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT id, name, objective, description, region_name FROM mission_metadata",
          "format": "table"
        }
      ]
    },
    {
      "id": 6,
      "type": "geomap",
      "title": "Drone & Enemy Locations",
      "description": "Overlay of drone positions and detected enemies.",
      "gridPos": { "x": 0, "y": 28, "w": 24, "h": 12 },
      "targets": [
        {
          "refId": "F",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT lat, lon FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        },
        {
          "refId": "G",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT lat, lon FROM enemy_detection WHERE $__timeFilter(ts)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] },
      "options": {
        "view": { "lat": 48.2, "lon": 16.4, "zoom": 5 },
        "layers": [
          {
            "type": "markers",
            "name": "Drones",
            "config": { "latField": "lat", "lonField": "lon", "color": { "fixed": "blue" }, "size": { "fixed": 4 } }
          },
          {
            "type": "markers",
            "name": "Enemies",
            "config": { "latField": "lat", "lonField": "lon", "color": { "fixed": "red" }, "size": { "fixed": 4 } }
          }
        ]
      }
    },
    {
      "id": 7,
      "type": "timeseries",
      "title": "Enemy Detections Over Time",
      "description": "Count of enemy detections per time window.",
      "gridPos": { "x": 0, "y": 40, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "H",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts, 1m) as time, COUNT(*) as detections FROM enemy_detection WHERE $__timeFilter(ts) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 8,
      "type": "histogram",
      "title": "Detection Confidence",
      "description": "Distribution of detection confidence.",
      "gridPos": { "x": 12, "y": 40, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "I",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT confidence FROM enemy_detection WHERE $__timeFilter(ts)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 9,
      "type": "timeseries",
      "title": "Detections per Minute",
      "description": "Number of enemy detections per minute.",
      "gridPos": { "x": 0, "y": 48, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "J",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT COUNT(*) FROM enemy_detection WHERE $__timeFilter(ts)",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 10,
      "type": "histogram",
      "title": "Detection Confidence (Aggregated)",
      "gridPos": { "x": 12, "y": 48, "w": 12, "h": 8 },
      "description": "Histogram of detection confidence aggregated by 0.1 intervals.",
      "targets": [
        {
          "refId": "K",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT ROUND(confidence, 1) AS bucket, COUNT(*) AS count FROM enemy_detection WHERE $__timeFilter(ts) GROUP BY bucket ORDER BY bucket",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 11,
      "type": "geomap",
      "title": "Drone Velocity Vectors",
      "description": "Shows velocity vectors for each drone based on successive positions.",
      "gridPos": { "x": 0, "y": 56, "w": 12, "h": 12 },
      "targets": [
        {
          "refId": "L",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT lat, lon, LAG(lat) OVER (PARTITION BY drone_id ORDER BY ts) AS prev_lat, LAG(lon) OVER (PARTITION BY drone_id ORDER BY ts) AS prev_lon FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] },
      "options": {
        "view": { "lat": 48.2, "lon": 16.4, "zoom": 5 },
        "layers": [
          {
            "type": "lines",
            "config": {
              "startLatField": "prev_lat",
              "startLonField": "prev_lon",
              "endLatField": "lat",
              "endLonField": "lon",
              "color": "yellow"
            }
          }
        ]
      }
    },
    {
      "id": 12,
      "type": "geomap",
      "title": "Flight Corridors",
      "description": "Planned flight corridors for missions.",
      "gridPos": { "x": 12, "y": 56, "w": 12, "h": 12 },
      "targets": [
        {
          "refId": "M",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT corridor_id, lat, lon, seq FROM flight_corridors ORDER BY corridor_id, seq",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] },
      "options": {
        "view": { "lat": 48.2, "lon": 16.4, "zoom": 5 },
        "layers": [
          {
            "type": "lines",
            "config": {
              "latField": "lat",
              "lonField": "lon",
              "groupBy": "corridor_id",
              "lineWidth": 2,
              "color": "cyan"
            }
          }
        ]
      }
    },
    {
      "id": 13,
      "type": "histogram",
      "title": "Altitude Distribution",
      "description": "Distribution of drone altitude readings.",
      "gridPos": { "x": 0, "y": 68, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "N",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT alt FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 14,
      "type": "histogram",
      "title": "Battery Level Distribution",
      "description": "Distribution of battery levels across the fleet.",
      "gridPos": { "x": 12, "y": 68, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "O",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT battery FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 15,
      "type": "geomap",
      "title": "Swarm Density Heatmap",
      "description": "Heatmap showing drone density across the region.",
      "gridPos": { "x": 0, "y": 76, "w": 24, "h": 12 },
      "targets": [
        {
          "refId": "P",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT lat, lon FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] },
      "options": {
        "view": { "lat": 48.2, "lon": 16.4, "zoom": 5 },
        "layers": [
          {
            "type": "heatmap",
            "config": { "latField": "lat", "lonField": "lon" }
          }
        ]
      }
    },
    {
      "id": 16,
      "type": "histogram",
      "title": "Detection Distance",
      "description": "Distribution of enemy distance from drones.",
      "gridPos": { "x": 0, "y": 88, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "Q",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT distance_m FROM enemy_detection WHERE $__timeFilter(ts)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 17,
      "type": "timeseries",
      "title": "Follower Count",
      "description": "Net follower assignments over time.",
      "gridPos": { "x": 0, "y": 96, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "R",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts, 1m) AS time, SUM(CASE WHEN event_type='assignment' THEN 1 WHEN event_type='unassignment' THEN -1 ELSE 0 END) AS followers FROM swarm_events WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 18,
      "type": "timeseries",
      "title": "Reassignment Frequency",
      "description": "Unassignment events per minute.",
      "gridPos": { "x": 12, "y": 96, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "S",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts, 1m) AS time, COUNT(*) AS unassign FROM swarm_events WHERE $__timeFilter(ts) AND event_type='unassignment' AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 19,
      "type": "timeseries",
      "title": "Formation Changes",
      "description": "Formation reconfiguration events.",
      "gridPos": { "x": 0, "y": 104, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "T",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts, 1m) AS time, COUNT(*) AS changes FROM swarm_events WHERE $__timeFilter(ts) AND event_type='formation_change' AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 20,
      "type": "piechart",
      "title": "Movement Pattern Distribution",
      "gridPos": { "x": 0, "y": 112, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "U",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT movement_pattern, COUNT(*) as count FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) GROUP BY movement_pattern",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 21,
      "type": "timeseries",
      "title": "Average Speed",
      "gridPos": { "x": 12, "y": 112, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "V",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__time(ts) AS time, AVG(speed_mps) AS speed FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 22,
      "type": "histogram",
      "title": "Heading Distribution",
      "gridPos": { "x": 0, "y": 120, "w": 24, "h": 8 },
      "targets": [
        {
          "refId": "W",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT heading_deg FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id)",
          "format": "table"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 23,
      "type": "timeseries",
      "title": "Communication Reliability",
      "gridPos": { "x": 0, "y": 128, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "X",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__time(ts) AS time, 1 - communication_loss AS reliability FROM simulation_state WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 24,
      "type": "timeseries",
      "title": "Sensor Noise",
      "gridPos": { "x": 12, "y": 128, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "Y",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__time(ts) AS time, sensor_noise FROM simulation_state WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 25,
      "type": "stat",
      "title": "Chaos Mode",
      "gridPos": { "x": 0, "y": 136, "w": 12, "h": 4 },
      "targets": [
        {
          "refId": "Z",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT chaos_mode FROM simulation_state WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) ORDER BY ts DESC LIMIT 1",
          "format": "table"
        }
      ]
    },
    {
      "id": 26,
      "type": "timeseries",
      "title": "Detections per Minute",
      "gridPos": { "x": 0, "y": 140, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "AA",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts,1m) AS time, COUNT(*) AS detections FROM enemy_detection WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 27,
      "type": "timeseries",
      "title": "Swarm Assignments",
      "gridPos": { "x": 12, "y": 140, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "AB",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts,1m) AS time, COUNT(*) AS assignments FROM swarm_events WHERE $__timeFilter(ts) AND event_type='assignment' AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 28,
      "type": "timeseries",
      "title": "Average Speed",
      "gridPos": { "x": 0, "y": 148, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "AC",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts,1m) AS time, AVG(speed_mps) AS speed FROM drone_telemetry WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    },
    {
      "id": 29,
      "type": "timeseries",
      "title": "Messages Sent",
      "gridPos": { "x": 12, "y": 148, "w": 12, "h": 8 },
      "targets": [
        {
          "refId": "AD",
          "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
          "rawSql": "SELECT $__timeGroupAlias(ts,1m) AS time, AVG(messages_sent) AS msgs FROM simulation_state WHERE $__timeFilter(ts) AND cluster_id IN ($cluster_id) GROUP BY time ORDER BY time",
          "format": "time_series"
        }
      ],
      "fieldConfig": { "defaults": {}, "overrides": [] }
    }
  ],
  "templating": {
    "list": [
      {
        "type": "query",
        "name": "cluster_id",
        "label": "Cluster",
        "description": "Filter telemetry by cluster.",
        "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
        "query": "SELECT DISTINCT cluster_id FROM drone_telemetry",
        "refresh": 1,
        "includeAll": true,
        "multi": true
      },
      {
        "type": "query",
        "name": "status",
        "label": "Drone Status",
        "description": "Filter drones by status.",
        "datasource": { "type": "greptimedb", "uid": "{{ env "GREPTIMEDB_DATASOURCE_UID" }}" },
        "query": "SELECT DISTINCT status FROM drone_telemetry",
        "refresh": 1,
        "includeAll": true,
        "multi": true
      }
    ]
  },
  "time": { "from": "now-15m", "to": "now" },
  "refresh": "5s"
}
